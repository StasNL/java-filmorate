DROP TABLE IF EXISTS likes, mpa, film_genre_matching, genres, friends, films, users;

CREATE TABLE IF NOT EXISTS mpa
(
    mpa_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(5) NOT NULL
);

CREATE TABLE IF NOT EXISTS users
(
    user_id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     VARCHAR(100) NOT NULL,
    email    VARCHAR(100) NOT NULL,
    login    VARCHAR(100) NOT NULL,
    birthday DATE         NOT NULL
);

CREATE TABLE IF NOT EXISTS films
(
    film_id      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         varchar(100) NOT NULL,
    description  varchar(200) NOT NULL,
    release_date date         NOT NULL,
    duration     INT,
    mpa_id       INT REFERENCES mpa (mpa_id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS likes
(
    film_id BIGINT NOT NULL REFERENCES films (film_id),
    user_id BIGINT NOT NULL REFERENCES users (user_id)
);

CREATE TABLE IF NOT EXISTS genres
(
    genre_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name    VARCHAR(15)
);

CREATE TABLE IF NOT EXISTS film_genre_matching
(
    film_id BIGINT REFERENCES films (film_id),
    genre_id INT REFERENCES genres (genre_id)
);

CREATE TABLE IF NOT EXISTS friends
(
    user_id       BIGINT,
    friend_id     BIGINT,
    CONSTRAINT user_status_fk FOREIGN KEY (friend_id) REFERENCES users (user_id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT users_fk FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE ON UPDATE CASCADE
);



